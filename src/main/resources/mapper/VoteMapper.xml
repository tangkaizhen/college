<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.VoteMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.Vote" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
    <result column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, article_id, comment_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_vote
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_vote
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.Vote" >
    insert into college_vote (id, user_id, article_id, 
      comment_id, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, 
      #{commentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.hanhe.college.entity.Vote" >
    insert into college_vote
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.Vote" >
    update college_vote
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.Vote" >
    update college_vote
    set user_id = #{userId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      comment_id = #{commentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="count" parameterType="map" resultType="int">
    SELECT count(1)
    FROM  college_vote
    WHERE user_id = #{userId}
    <if test="articleId != null" >
      AND article_id = #{articleId}
    </if>
    <if test="commentId != null" >
      AND comment_id = #{commentId}
    </if>
  </select>
  <select id="upvoteArticle" statementType="CALLABLE">
    <![CDATA[
      {call pro_upvote_article(
            #{userId,jdbcType=BIGINT,mode=IN},
            #{articleId,jdbcType=BIGINT,mode=IN},
            #{createTime,jdbcType=TIMESTAMP,mode=IN},
            #{result,jdbcType=INTEGER,mode=OUT}
    )}
    ]]>
  </select>
  <select id="downvoteArticle" statementType="CALLABLE">
    <![CDATA[
      {call pro_downvote_article(
            #{userId,jdbcType=BIGINT,mode=IN},
            #{articleId,jdbcType=BIGINT,mode=IN},
            #{result,jdbcType=INTEGER,mode=OUT}
    )}
    ]]>
  </select>
  <select id="upvoteComment" statementType="CALLABLE">
    <![CDATA[
      {call pro_upvote_comment(
            #{userId,jdbcType=BIGINT,mode=IN},
            #{commentId,jdbcType=BIGINT,mode=IN},
            #{createTime,jdbcType=TIMESTAMP,mode=IN},
            #{result,jdbcType=INTEGER,mode=OUT}
    )}
    ]]>
  </select>
</mapper>