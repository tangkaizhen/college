<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="category_id" property="categoryId" jdbcType="BIGINT" />
    <result column="article_category" property="articleCategory" jdbcType="VARCHAR" />
    <result column="expert_id" property="expertId" jdbcType="BIGINT" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="cover_img" property="coverImg" jdbcType="VARCHAR" />
    <result column="cover_img_src" property="coverImgSrc" jdbcType="VARCHAR" />
    <result column="read_size" property="readSize" jdbcType="INTEGER" />
    <result column="vote_size" property="voteSize" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="operate_ip" property="operateIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, category_id, article_category, expert_id, author, title, content, type, cover_img, 
    cover_img_src, read_size, vote_size, seq, state, create_time, operator, operate_time, 
    operate_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.Article" >
    insert into college_article (id, category_id, article_category, 
      expert_id, author, title, 
      content, type, cover_img, 
      cover_img_src, read_size, vote_size, 
      seq, state, create_time, 
      operator, operate_time, operate_ip
      )
    values (#{id,jdbcType=BIGINT}, #{categoryId,jdbcType=BIGINT}, #{articleCategory,jdbcType=VARCHAR}, 
      #{expertId,jdbcType=BIGINT}, #{author,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{coverImg,jdbcType=VARCHAR}, 
      #{coverImgSrc,jdbcType=VARCHAR}, #{readSize,jdbcType=INTEGER}, #{voteSize,jdbcType=INTEGER}, 
      #{seq,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.hanhe.college.entity.Article" >
    insert into college_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="articleCategory != null" >
        article_category,
      </if>
      <if test="expertId != null" >
        expert_id,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="coverImg != null" >
        cover_img,
      </if>
      <if test="coverImgSrc != null" >
        cover_img_src,
      </if>
      <if test="readSize != null" >
        read_size,
      </if>
      <if test="voteSize != null" >
        vote_size,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="articleCategory != null" >
        #{articleCategory,jdbcType=VARCHAR},
      </if>
      <if test="expertId != null" >
        #{expertId,jdbcType=BIGINT},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="coverImg != null" >
        #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="coverImgSrc != null" >
        #{coverImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="readSize != null" >
        #{readSize,jdbcType=INTEGER},
      </if>
      <if test="voteSize != null" >
        #{voteSize,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        #{operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.Article" >
    update college_article
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="articleCategory != null" >
        article_category = #{articleCategory,jdbcType=VARCHAR},
      </if>
      <if test="expertId != null" >
        expert_id = #{expertId,jdbcType=BIGINT},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="coverImg != null" >
        cover_img = #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="coverImgSrc != null" >
        cover_img_src = #{coverImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="readSize != null" >
        read_size = #{readSize,jdbcType=INTEGER},
      </if>
      <if test="voteSize != null" >
        vote_size = #{voteSize,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.Article" >
    update college_article
    set category_id = #{categoryId,jdbcType=BIGINT},
      article_category = #{articleCategory,jdbcType=VARCHAR},
      expert_id = #{expertId,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      cover_img = #{coverImg,jdbcType=VARCHAR},
      cover_img_src = #{coverImgSrc,jdbcType=VARCHAR},
      read_size = #{readSize,jdbcType=INTEGER},
      vote_size = #{voteSize,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getTopList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    college_article
    WHERE seq &lt; 0 AND state = 1
    ORDER BY operate_time ASC
  </select>
  <update id="increaseReadSize">
    UPDATE college_article
    SET read_size = read_size + 1
    WHERE id = #{id}
  </update>
  <select id="wikiList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    college_article
    WHERE expert_id IS NULL AND state = 1
    <if test="categoryId != null and categoryId != 0" >
      AND category_id = #{categoryId}
    </if>
    ORDER BY seq ASC, operate_time DESC
  </select>
  <select id="expertArticleList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    college_article
    WHERE expert_id IS NOT NULL AND state = 1
    <if test="expertId != null and expertId != 0" >
      AND expert_id = #{expertId}
    </if>
    ORDER BY seq ASC, operate_time DESC
  </select>
  <select id="countBySeq" parameterType="int" resultType="int">
    SELECT count(1)
    FROM  college_article
    WHERE expert_id IS NULL AND state = 1 AND seq = #{seq}
  </select>
  <resultMap id="MomentDTOMap" type="com.hanhe.college.dto.MomentDTO">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="cover_img" property="coverImg" jdbcType="VARCHAR" />
    <result column="read_size" property="readSize" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="moments" resultMap="MomentDTOMap">
    SELECT 1 AS type, id, title, cover_img, read_size, create_time
    FROM  college_article
    WHERE expert_id = #{expertId} AND state = 1
    ORDER BY create_time DESC
  </select>
  <select id="isExist" parameterType="map" resultType="int">
    SELECT count(1)
    FROM  college_article
    WHERE state = 1 AND category_id = #{categoryId}
  </select>
  <select id="selectByKeyword" resultMap="BaseResultMap">
    SELECT
     id, author, title, content, type, cover_img, read_size, seq, create_time
    FROM college_article
    WHERE state = 1 AND title LIKE CONCAT('%',#{keyword},'%')
    ORDER BY type ASC, operate_time DESC
  </select>
</mapper>