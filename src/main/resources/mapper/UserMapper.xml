<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="head_img" property="headImg" jdbcType="VARCHAR" />
    <result column="head_img_src" property="headImgSrc" jdbcType="VARCHAR" />
    <result column="invite_code" property="inviteCode" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, password, openid, name, head_img, head_img_src, invite_code, state, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.User" >
    insert into college_user (id, phone, password, 
      openid, name, head_img, 
      head_img_src, invite_code, state, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{headImgSrc,jdbcType=VARCHAR}, #{inviteCode,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.hanhe.college.entity.User" >
    insert into college_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="headImg != null" >
        head_img,
      </if>
      <if test="headImgSrc != null" >
        head_img_src,
      </if>
      <if test="inviteCode != null" >
        invite_code,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="headImgSrc != null" >
        #{headImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null" >
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.User" >
    update college_user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="headImgSrc != null" >
        head_img_src = #{headImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="inviteCode != null" >
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.User" >
    update college_user
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      head_img_src = #{headImgSrc,jdbcType=VARCHAR},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="countByPhoneOrOpenid" resultType="int">
    SELECT count(1)
    FROM  college_user
    WHERE state = 1 AND (phone = #{phone} OR openid = #{openid})
  </select>
  <select id="getByOpenId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from college_user
    where openid = #{openid} AND state = 1
    limit 1
  </select>
  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from college_user
    WHERE state = 1
    ORDER BY update_time DESC
  </select>
</mapper>