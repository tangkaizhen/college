<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.SmsLogMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.SmsLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, code, type, ip, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_sms_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_sms_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.SmsLog" >
    insert into college_sms_log (id, phone, code, 
      type, ip, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanhe.college.entity.SmsLog" >
    insert into college_sms_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.SmsLog" >
    update college_sms_log
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.SmsLog" >
    update college_sms_log
    set phone = #{phone,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getCheckCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from college_sms_log
    where phone = #{phone} and type = #{type}
    order by create_time desc limit 1
  </select>
  <select id="getCount" resultType="int">
    select count(*)
    from college_sms_log
    where phone = #{phone} and type = #{type} and create_time > DATE_SUB(NOW(),INTERVAL 1 HOUR)
  </select>
  <select id="getIpCount" resultType="int">
    select count(*)
    from college_sms_log
    where ip = #{ip} and DATEDIFF(create_time,NOW()) = 0
  </select>
  <select id="getRecentCount" resultType="int">
    select count(*)
    from college_sms_log
    where phone = #{phone} and create_time > DATE_SUB(NOW(),INTERVAL 1 MINUTE)
  </select>
</mapper>