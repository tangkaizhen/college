<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.ExamPaperMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.ExamPaper" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="exam_id" property="examId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="operate_ip" property="operateIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, exam_id, name, state, operator, operate_time, operate_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_exam_paper
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_exam_paper
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.ExamPaper" >
    insert into college_exam_paper (id, exam_id, name, 
      state, operator, operate_time, 
      operate_ip)
    values (#{id,jdbcType=BIGINT}, #{examId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{operateIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.hanhe.college.entity.ExamPaper" >
    insert into college_exam_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="examId != null" >
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        #{operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.ExamPaper" >
    update college_exam_paper
    <set >
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.ExamPaper" >
    update college_exam_paper
    set exam_id = #{examId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="ExamPaperDTOMap" type="com.hanhe.college.dto.ExamPaperDTO" extends="BaseResultMap">
    <collection property="questions" javaType="list" ofType="com.hanhe.college.entity.ExamQuestion">
      <id column="q_id" property="id" jdbcType="BIGINT" />
      <result column="q_type" property="type" jdbcType="INTEGER" />
      <result column="q_question" property="question" jdbcType="VARCHAR" />
      <result column="q_option1" property="option1" jdbcType="VARCHAR" />
      <result column="q_option2" property="option2" jdbcType="VARCHAR" />
      <result column="q_option3" property="option3" jdbcType="VARCHAR" />
      <result column="q_option4" property="option4" jdbcType="VARCHAR" />
      <result column="q_answer" property="answer" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <select id="list" resultMap="ExamPaperDTOMap">
    SELECT p.id, p.name, q.id AS q_id, q.type AS q_type, q.question AS q_question, q.option1 AS q_option1, q.option2 AS q_option2, q.option3 AS q_option3, q.option4 AS q_option4,
    q.answer AS q_answer
    FROM college_exam_paper p
    JOIN college_exam_paper_question pq ON pq.exam_paper_id = p.id
    LEFT JOIN college_exam_question q ON pq.question_id = q.id
    WHERE p.exam_id = #{examId} AND p.state = 1
    ORDER BY p.id ASC, q.type ASC, q.id ASC
  </select>
  <update id="deleteByExamId">
    update college_exam_paper
    set state = 0,
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=BIGINT}
  </update>
  <select id="getByExamId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM college_exam_paper
    WHERE exam_id = #{examId} AND state = 1
    ORDER BY id ASC
  </select>
</mapper>