<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanhe.college.dao.ExamRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hanhe.college.entity.ExamRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="exam_result_id" property="examResultId" jdbcType="BIGINT" />
    <result column="question_id" property="questionId" jdbcType="BIGINT" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, exam_result_id, question_id, answer, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from college_exam_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from college_exam_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hanhe.college.entity.ExamRecord" >
    insert into college_exam_record (id, exam_result_id, question_id, 
      answer, flag)
    values (#{id,jdbcType=BIGINT}, #{examResultId,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT}, 
      #{answer,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hanhe.college.entity.ExamRecord" >
    insert into college_exam_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="examResultId != null" >
        exam_result_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="examResultId != null" >
        #{examResultId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanhe.college.entity.ExamRecord" >
    update college_exam_record
    <set >
      <if test="examResultId != null" >
        exam_result_id = #{examResultId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanhe.college.entity.ExamRecord" >
    update college_exam_record
    set exam_result_id = #{examResultId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      answer = #{answer,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into college_exam_record(exam_result_id, question_id, answer, flag)
    values
    <foreach collection="examRecordList" item="examRecord" separator=",">
      (#{examRecord.examResultId}, #{examRecord.questionId}, #{examRecord.answer}, #{examRecord.flag})
    </foreach>
  </insert>
</mapper>